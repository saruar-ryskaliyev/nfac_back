"""fix tags

Revision ID: 6364c2cef3ed
Revises: 596c27d37e97
Create Date: 2025-08-01 18:42:58.886865

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6364c2cef3ed'
down_revision = '596c27d37e97'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create sequence first
    op.execute("CREATE SEQUENCE tags_id_seq")
    
    op.create_table('tags',
    sa.Column('id', sa.Integer(), server_default=sa.text("nextval('tags_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('quiz_tags',
    sa.Column('quiz_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizzes.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('quiz_id', 'tag_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('quiz_tags')
    op.drop_table('tags')
    # Drop sequence
    op.execute("DROP SEQUENCE IF EXISTS tags_id_seq")
    # ### end Alembic commands ###
